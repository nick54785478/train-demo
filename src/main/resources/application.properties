spring.application.name=train-demo

# MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/tutorial?useUnicode=yes&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=root

# Spring Data JPA
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# JWT Token
jwt.secret.key=FRaNlJmM1RzRlNhYl123FRaNlJmM1RzRlNhYl123898
jwt.token-expiration-seconds=3600
# 是否啟用 JWToken
jwt.auth.enabled=true

# Auth-Service
auth.endpoint.service=localhost:8088

# Rabbit MQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
# 連接到 RabbitMQ 伺服器的逾時時間 (30s)
spring.rabbitmq.connection-timeout=30000
# 與 RabbitMQ 伺服器的心跳間隔（以秒為單位）
spring.rabbitmq.requested-heartbeat=60


# 自動消費
spring.rabbitmq.listener.simple.acknowledge-mode=auto
# 手動消費
#spring.rabbitmq.listener.simple.acknowledge-mode=manual
# 設定訊息處理失敗時是否將訊息重新入隊。
spring.rabbitmq.listener.simple.default-requeue-rejected=true
# 消費者的初始並發數
spring.rabbitmq.listener.simple.concurrency=1
# 設定消費者的最大並發數
spring.rabbitmq.listener.simple.max-concurrency=5




# Exange Name
rabbitmq.exchange.name=topic-order-exchange
# topic-queue 名稱，格式: topic.名稱
rabbitmq.test-topic-queue.name=topic.test
rabbitmq.book-topic-queue.name=topic.booking
rabbitmq.register-topic-queue.name=topic.register


# 發送者開啟 return 確認機制
#spring.rabbitmq.publisher-returns=true
# 傳送者開啟 confirm 確認機制
#spring.rabbitmq.publisher-confirm-type: correlated

